---
# tasks file for ansible-docker

- name: Install required system packages
  apt:
    name: "{{item}}"
    state: latest
    update_cache: yes
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - virtualenv
    - gnupg

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Update apt and install docker.
  apt:
    name: "{{item}}"
    state: latest
    update_cache: yes
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin

- name: Ensure group "docker" exists
  ansible.builtin.group:
    name: docker
    state: present

- name: Add {{ server_user }} user to the 'docker' group
  user:
    name: "{{ server_user }}"
    groups: docker
    append: yes

- name: Check if Docker Compose is installed
  command: docker-compose --version
  register: docker_compose_check
  ignore_errors: true
  tags:
    - "docker_compose"

- name: Install Docker Compose if not present
  when: (docker_compose_check.rc != 0) or (docker_compose_force_reinstall | default(false) | bool)
  block:
    - name: Get latest Docker Compose release
      uri:
        url: "https://api.github.com/repos/docker/compose/releases/latest"
        return_content: yes
      register: compose_release
    
    - name: Delete existing Docker Compose binary
      file:
        path: /usr/local/bin/docker-compose
        state: absent
      ignore_errors: true

    - name: Download Docker Compose binary
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ compose_release.json.tag_name }}/docker-compose-{{ ansible_system }}-{{ ansible_machine }}"
        dest: /usr/local/bin/docker-compose
        mode: "a+x"

    - name: Create symbolic link
      file:
        src: /usr/local/bin/docker-compose
        dest: /usr/bin/docker-compose
        state: link
  tags:
    - "docker_compose"

- name: Ensure docker is active.
  service:
    name: docker
    state: started
    enabled: yes

- name: Pull default Docker image
  community.docker.docker_image:
    name: "{{ default_container_image }}"
    source: pull

- name: Create default containers
  community.docker.docker_container:
    name: "{{ default_container_name }}{{ item }}"
    image: "{{ default_container_image }}"
    command: "{{ default_container_command }}"
    state: present
  with_sequence: count={{ container_count }}
